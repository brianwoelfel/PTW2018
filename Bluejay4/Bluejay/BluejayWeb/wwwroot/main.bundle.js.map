{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.module.ts","./src/app/component/app.component.css","./src/app/component/app.component.html","./src/app/component/app.component.ts","./src/app/component/state-list.component.css","./src/app/component/state-list.component.html","./src/app/component/state-list.component.ts","./src/app/component/zip-list.component.css","./src/app/component/zip-list.component.html","./src/app/component/zip-list.component.ts","./src/app/service/state.service.ts","./src/app/service/zip.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AppComponent } from './component/app.component';\r\nimport { ZipListComponent } from './component/zip-list.component';\r\nimport { StateListComponent } from './component/state-list.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', component: StateListComponent }, \r\n\t{ path: 'zip', component: ZipListComponent }, \r\n\t{ path: 'state', component: StateListComponent }, \r\n];\r\n\r\n@NgModule({ \r\n    imports: [\r\n\t\tRouterModule.forRoot(routes)\r\n\t],\r\n    exports: [\r\n\t\tRouterModule\r\n\t]\r\n})\r\nexport class AppRoutingModule { } \r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","// Import standard required angular libraries\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n// Import the extra third party libraries \nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n// Import our primary component (like a master page)\nimport { AppComponent } from './component/app.component';\n// Import our components\nimport { ZipListComponent } from './component/zip-list.component';\nimport { StateListComponent } from './component/state-list.component';\n// Import our services\nimport { ZipService } from './service/zip.service';\nimport { StateService } from './service/state.service';\n// Import our routing table\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n\tdeclarations: [\n\t\t// Make all of our components available to Angular\n\t\tAppComponent,\n\t\tZipListComponent,\n\t\tStateListComponent\n\t],\n\timports: [\n\t\t// Import standard libraries and make available to individual components\n\t\tBrowserModule,\n\t\tHttpModule,\n\t    AppRoutingModule,\n\t\tReactiveFormsModule,\n\t\tFormsModule,\n\t\t// Import our routing list\n\t\tAppRoutingModule,\n\t\t// Import angular bootstrap\n\t\tNgbModule.forRoot()\n\t],\n\tproviders: [\n\t\t// Make our services available for dependency injection\n\t\tZipService,\n\t\tStateService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/app.component.css\n// module id = ./src/app/component/app.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark mb-4\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"navbar-toggler\\\" aria-controls=\\\"navbarCollapse\\\" (click)=\\\"isExpanded = !isExpanded\\\" [attr.aria-expanded]=\\\"!isExpanded\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Bluejay</a>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarContent\\\" [ngbCollapse]=\\\"!isExpanded\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <!-- START_MENU -->\\r\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/state\\\">State</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{exact:true}\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/zip\\\">Zip</a>\\r\\n      </li>\\r\\n      <!-- END_MENU -->\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<footer class=\\\"footer \\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <p class=\\\"text-muted\\\">Site Footer, copyright, contact, etc.</p>\\r\\n  </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/app.component.html\n// module id = ./src/app/component/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/app.component.ts","module.exports = \"\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/state-list.component.css\n// module id = ./src/app/component/state-list.component.css\n// module chunks = main","module.exports = \"<h2>State List</h2>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"states; else statesLoading\\\">\\r\\n  <table class=\\\"table table-striped\\\" style=\\\"max-width: none; width: 0px\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Code</th>\\r\\n        <th>Name</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let state of states\\\">\\r\\n        <tr>\\r\\n          <td>{{state.code}}</td>\\r\\n          <td>{{state.name}}</td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n</div>\\r\\n<ng-template #statesLoading>\\r\\n  Loading ...\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/state-list.component.html\n// module id = ./src/app/component/state-list.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { State } from '../model/state';\nimport { StateService } from '../service/state.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'state-list',\n  templateUrl: './state-list.component.html',\n  styleUrls: ['./state-list.component.css']\n})\nexport class StateListComponent {\n    states: State[];\n\n    constructor(\n        private stateService: StateService,\n        private router: Router\n\t\t) {\n    }\n\n    ngOnInit(): void {\n\t\tthis.list();\n    }\n\n    list(): void {\n        this.stateService\n            .list()\n            .then(states => this.states = states);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/state-list.component.ts","module.exports = \"\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/zip-list.component.css\n// module id = ./src/app/component/zip-list.component.css\n// module chunks = main","module.exports = \"<h2>Zip List</h2>\\r\\n\\r\\n<div class=\\\"table-responsive\\\" *ngIf=\\\"zips; else zipsLoading\\\">\\r\\n  <table class=\\\"table table-striped\\\" style=\\\"max-width: none; width: 0px\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Zip Code</th>\\r\\n        <th>City</th>\\r\\n        <th>State</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <ng-container *ngFor=\\\"let zip of zips\\\">\\r\\n        <tr>\\r\\n          <td>{{zip.zipcode}}</td>\\r\\n          <td>{{zip.city}}</td>\\r\\n          <td>{{zip.state}}</td>\\r\\n        </tr>\\r\\n      </ng-container>\\r\\n    </tbody>\\r\\n  </table>\\r\\n\\r\\n</div>\\r\\n<ng-template #zipsLoading>\\r\\n  Loading ...\\r\\n</ng-template>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/component/zip-list.component.html\n// module id = ./src/app/component/zip-list.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Zip } from '../model/zip';\nimport { ZipService } from '../service/zip.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'zip-list',\n  templateUrl: './zip-list.component.html',\n  styleUrls: ['./zip-list.component.css']\n})\nexport class ZipListComponent {\n    zips: Zip[];\n\n    constructor(\n        private zipService: ZipService,\n        private router: Router\n\t\t) {\n    }\n\n    ngOnInit(): void {\n\t\tthis.list();\n    }\n\n    list(): void {\n        this.zipService\n            .list()\n            .then(zips => this.zips = zips);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component/zip-list.component.ts","import { Injectable }    from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { State } from '../model/state';\r\n\r\n\r\n@Injectable()\r\nexport class StateService  {\r\n\r\n\tprivate headers = new Headers({ 'Content-Type': 'application/json' });\r\n\tprivate options = new RequestOptions({headers: this.headers});\r\n\tprivate baseUrl = \"/api/state\";\r\n\r\n\tconstructor(\r\n\t\tprivate http: Http\r\n\t\t) {}\r\n\r\n\r\n\tlist(): Promise<State[]> {\r\n\t\treturn this.http.get(`${this.baseUrl}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(response => response.json() as State[])\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tget(id: number): Promise<State> {\r\n\t\treturn this.http.get(`${this.baseUrl}/${id}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(response => response.json() as State)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n    public handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/state.service.ts","import { Injectable }    from '@angular/core';\r\nimport { Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Zip } from '../model/zip';\r\n\r\n\r\n@Injectable()\r\nexport class ZipService  {\r\n\r\n\tprivate headers = new Headers({ 'Content-Type': 'application/json' });\r\n\tprivate options = new RequestOptions({headers: this.headers});\r\n\tprivate baseUrl = \"/api/zip\";\r\n\r\n\tconstructor(\r\n\t\tprivate http: Http\r\n\t\t) {}\r\n\r\n\r\n\tlist(): Promise<Zip[]> {\r\n\t\treturn this.http.get(`${this.baseUrl}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(response => response.json() as Zip[])\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n\tget(id: number): Promise<Zip> {\r\n\t\treturn this.http.get(`${this.baseUrl}/${id}`)\r\n\t\t\t.toPromise()\r\n\t\t\t.then(response => response.json() as Zip)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\r\n    public handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/zip.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}